<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://pkpete.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://pkpete.github.io/" rel="alternate" type="text/html" /><updated>2021-08-06T16:07:15+09:00</updated><id>https://pkpete.github.io/feed.xml</id><title type="html">D A R K   H O R S E</title><subtitle>공부, 일상</subtitle><entry><title type="html">Week 1</title><link href="https://pkpete.github.io/boostcamp" rel="alternate" type="text/html" title="Week 1" /><published>2021-08-06T00:00:00+09:00</published><updated>2021-08-06T00:00:00+09:00</updated><id>https://pkpete.github.io/boostcamp</id><content type="html" xml:base="https://pkpete.github.io/boostcamp">&lt;h1 id=&quot;week-1&quot;&gt;Week 1&lt;/h1&gt;
&lt;h2 id=&quot;목차&quot;&gt;목차&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#day-01&quot;&gt;Day 01&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#day-02&quot;&gt;Day 02&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#day-03&quot;&gt;Day 03&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#day-04&quot;&gt;Day 04&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-01&quot;&gt;Day 01&lt;/h2&gt;
&lt;h3 id=&quot;강의-복습-내용&quot;&gt;강의 복습 내용&lt;/h3&gt;
&lt;h5 id=&quot;python2-1&quot;&gt;[Python2-1]&lt;/h5&gt;
&lt;h6 id=&quot;변수&quot;&gt;변수&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;데이터을 저장하기 위한 메모리 공간&lt;/li&gt;
  &lt;li&gt;값은 메모리 주소에 할당된다
ex A = 8 .. A라는 이름을 가진 메모리 주소에 8을 저장하라&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;dynamic-typing&quot;&gt;Dynamic Typing&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;다른 언어와 달리 파이썬은 코드 실행 시점에 데이터의 Type을 경정한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;list&quot;&gt;List&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;Indexing
    &lt;ul&gt;
      &lt;li&gt;List에 있는 값들은 주소를 갖는다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Slicing
    &lt;ul&gt;
      &lt;li&gt;List의 값들을 잘라서 쓰는 것
ex) alpha = [‘a’, ‘b’, ‘c’, ‘d’, ‘e’]
print(alpha[:]) #[‘a’, ‘b’, ‘c’, ‘d’, ‘e’]
print(alpha[-4:])    #[‘b’, ‘c’, ‘d’, ‘e’]&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;List의 연산
    &lt;ul&gt;
      &lt;li&gt;+ : 합치기&lt;/li&gt;
      &lt;li&gt;* : 반복&lt;/li&gt;
      &lt;li&gt;len() : 리스트 길이&lt;/li&gt;
      &lt;li&gt;append : 이어붙이기
  ex) alpha.append(‘z’)&lt;/li&gt;
      &lt;li&gt;extend : 새로운 리스트 추가
  ex) alpha.extend([‘z’])&lt;/li&gt;
      &lt;li&gt;insert
  ex) alpha.insert(0,’a’)&lt;/li&gt;
      &lt;li&gt;remove
  ex) alpha.remove(‘z’)&lt;/li&gt;
      &lt;li&gt;del
  ex) del alpha[0]&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;패킹과-언패킹&quot;&gt;패킹과 언패킹&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;패킹 : 한 변수에 여러 개의 데이터를 넣는 것&lt;/li&gt;
  &lt;li&gt;언패킹 : 한 변수의 데이터를 각각의 변수로 반환
ex) t = [1,2,3]
a, b, c = t&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;python-2-2&quot;&gt;[Python 2-2]&lt;/h5&gt;
&lt;h6 id=&quot;함수&quot;&gt;함수&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;어떤 일을 수행하는 코드의 덩어리&lt;/li&gt;
  &lt;li&gt;def 함수이름 () :&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;print-formatting&quot;&gt;print formatting&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;%string, format 함수, fstring 중 fstring이 가장 깔끔!
    &lt;ul&gt;
      &lt;li&gt;fstring example &lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;&lt;em&gt;**&lt;/em&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;python-2-3&quot;&gt;[Python 2-3]&lt;/h5&gt;
&lt;h6 id=&quot;조건문&quot;&gt;조건문&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;어떤 일을 수행하는 코드의 덩어리&lt;/li&gt;
  &lt;li&gt;def 함수이름 () : &lt;strong&gt;**&lt;/strong&gt;*****&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;반복문&quot;&gt;반복문&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;반복 시작 조건, 종료 조건, 수행 명령으로 구성&lt;/li&gt;
  &lt;li&gt;for문
    &lt;ul&gt;
      &lt;li&gt;range() 사용하기&lt;/li&gt;
      &lt;li&gt;
        &lt;hr /&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;while문&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;python-2-4&quot;&gt;[Python 2-4]&lt;/h5&gt;
&lt;h6 id=&quot;string&quot;&gt;String&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;시퀀스 자료형으로 문자형 data를 메모리에 저장&lt;/li&gt;
  &lt;li&gt;string은 1byte 크기로 한 글자씩 메모리 공간이 할당됨
    &lt;ul&gt;
      &lt;li&gt;Indexing&lt;/li&gt;
      &lt;li&gt;Slicing&lt;/li&gt;
      &lt;li&gt;덧셈 뺄셈 연산 가능&lt;/li&gt;
      &lt;li&gt;문자열 함수 &lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;**&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;파이썬-함수-호출-방식&quot;&gt;파이썬 함수 호출 방식&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;Call by Object Reference 객체의 주소가 함수로 전달되는 방식
    &lt;ul&gt;
      &lt;li&gt;전달된 객체를 참조하여 변경 시 호출자에 영향을 주나, 새로운 객체를 만들면 호출자에 영향을 주지 않는다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;피어세션-정리-및-학습-회고&quot;&gt;피어세션 정리 및 학습 회고&lt;/h3&gt;
&lt;p&gt;BoostCamp 첫 날 서로에 대해 알아가는 시간을 갖고 무슨 활동을 해야되는지 정했다. 매일 진행 정도를 맞추어서 강의 중 이해하기 어려웠던 부분과 과제 코드 리뷰를 하기로 했다.
다른 조원 분들과 같이 부스트 캠프를 완료하기 위해 많이 노력해야 될거 같다!&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-02&quot;&gt;Day 02&lt;/h2&gt;
&lt;h3 id=&quot;강의-복습-내용-1&quot;&gt;강의 복습 내용&lt;/h3&gt;
&lt;h5 id=&quot;python3-1&quot;&gt;[Python3-1]&lt;/h5&gt;
&lt;h6 id=&quot;자료-구조&quot;&gt;자료 구조&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;스택 (Stack)
    &lt;ul&gt;
      &lt;li&gt;리스트를 사용하여 스택 구현 가능&lt;/li&gt;
      &lt;li&gt;append(), pop()&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;큐 (Queue)
    &lt;ul&gt;
      &lt;li&gt;리스트를 사용하여 큐 구현 가능&lt;/li&gt;
      &lt;li&gt;append(), pop(0)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;튜플 (Tuple)
    &lt;ul&gt;
      &lt;li&gt;값의 변경이 불가능한 리스트&lt;/li&gt;
      &lt;li&gt;선언 시 ‘()’를 사용&lt;/li&gt;
      &lt;li&gt;리스트의 특징과 동일하다 –&amp;gt; 왜 쓸까??
  프로그램을 작동하는 동안 변경되지 않은 데이터를 저장하기 위해!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;집합 (Set)
    &lt;ul&gt;
      &lt;li&gt;값을 순서없이 저장, 중복 불허 하는 자료형&lt;/li&gt;
      &lt;li&gt;
        &lt;hr /&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사전 (Dictionary)
    &lt;ul&gt;
      &lt;li&gt;Key와 Value를 매칭하여 key로 value 검색&lt;/li&gt;
      &lt;li&gt;.items()&lt;/li&gt;
      &lt;li&gt;.keys()&lt;/li&gt;
      &lt;li&gt;.values()&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Counter
    &lt;ul&gt;
      &lt;li&gt;Sequence type의 data element들의 개수를 dict 형태로 반환&lt;/li&gt;
      &lt;li&gt;
        &lt;hr /&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;python-3-2&quot;&gt;[Python 3-2]&lt;/h5&gt;
&lt;h6 id=&quot;pythonic-code&quot;&gt;Pythonic Code&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;파이썬의 특유의 문법을 활용해 효율적으로 코드를 표현&lt;/li&gt;
  &lt;li&gt;split
    &lt;ul&gt;
      &lt;li&gt;string 값을 기준으로 나눠서 List 형태로 변환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;join
    &lt;ul&gt;
      &lt;li&gt;string으로 구성된 List를 합쳐 하나의 string으로 반환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;list comprehension
    &lt;ul&gt;
      &lt;li&gt;기존 list를 사용해 다른 list를 만드는 기법&lt;/li&gt;
      &lt;li&gt;for + append 보다 빠름&lt;/li&gt;
      &lt;li&gt;
        &lt;hr /&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;enumerate
    &lt;ul&gt;
      &lt;li&gt;list의 element를 추출할 때 번호를 붙여서 추출&lt;/li&gt;
      &lt;li&gt;
        &lt;hr /&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;zip
    &lt;ul&gt;
      &lt;li&gt;두 개의 list의 값을 병렬적으로 추출함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;가변인자 (variable-length)
    &lt;ul&gt;
      &lt;li&gt;개수가 정해지지 않은 변수를 함수의 파라미터로 사용하는 법&lt;/li&gt;
      &lt;li&gt;* 기호를 사용하여 표시&lt;/li&gt;
      &lt;li&gt;
        &lt;hr /&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;키워드 가변인자 (Keyword variable-length)
    &lt;ul&gt;
      &lt;li&gt;파라미터 이름을 따로 지정하지 않고 입력&lt;/li&gt;
      &lt;li&gt;**기호를 사용하여 표시&lt;/li&gt;
      &lt;li&gt;
        &lt;hr /&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;python-4-1&quot;&gt;[Python 4-1]&lt;/h5&gt;
&lt;h6 id=&quot;클래스와-객체&quot;&gt;클래스와 객체&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;속성(변수)과 행동(함수)을 갖는다&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;예시 사진&lt;/li&gt;
  &lt;li&gt;__init__ : 객체 초기화 예약 함수&lt;/li&gt;
  &lt;li&gt;__는 특수한 예약 함수나 변수로 사용&lt;/li&gt;
  &lt;li&gt;Class 함수로 self를 반드시 추가해야된다&lt;/li&gt;
  &lt;li&gt;상속 (Inheritance)
    &lt;ul&gt;
      &lt;li&gt;부모클래스로부터 속성과 Method를 물려받은 자식 클래스를 생성하는 것&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;다형성 (Polymorphism)
    &lt;ul&gt;
      &lt;li&gt;같은 이름 메소드의 내부 로직을 다르게 작성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;python-4-2&quot;&gt;[Python 4-2]&lt;/h5&gt;
&lt;h6 id=&quot;module&quot;&gt;Module&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;프로그램에서의 작은 프로그램 조각들, 모듈을 모아 하나의 큰 프로그램 개발&lt;/li&gt;
  &lt;li&gt;import 문을 사용해서 모듈 호출
    &lt;h6 id=&quot;package&quot;&gt;Package&lt;/h6&gt;
  &lt;/li&gt;
  &lt;li&gt;모둘을 모아 놓은 단위, 하나의 프로그램&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;ai-math-1&quot;&gt;[AI Math 1]&lt;/h5&gt;
&lt;h6 id=&quot;module-1&quot;&gt;Module&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;h6 id=&quot;package-1&quot;&gt;Package&lt;/h6&gt;
    &lt;p&gt;-&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;ai-math-2&quot;&gt;[AI Math 2]&lt;/h5&gt;
&lt;h6 id=&quot;module-2&quot;&gt;Module&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;h6 id=&quot;package-2&quot;&gt;Package&lt;/h6&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;ai-math-3&quot;&gt;[AI Math 3]&lt;/h5&gt;
&lt;h6 id=&quot;module-3&quot;&gt;Module&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;h6 id=&quot;package-3&quot;&gt;Package&lt;/h6&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;ai-math-4&quot;&gt;[AI Math 4]&lt;/h5&gt;
&lt;h6 id=&quot;module-4&quot;&gt;Module&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;h6 id=&quot;package-4&quot;&gt;Package&lt;/h6&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;ai-math-5&quot;&gt;[AI Math 5]&lt;/h5&gt;
&lt;h6 id=&quot;module-5&quot;&gt;Module&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;h6 id=&quot;package-5&quot;&gt;Package&lt;/h6&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;피어세션-정리-및-학습-회고-1&quot;&gt;피어세션 정리 및 학습 회고&lt;/h3&gt;
&lt;p&gt;과제의 코드 리뷰를 통해 다른 조원분들이 파이썬 코드를 어떻게 짜는 지 보고 배울 수 있었다. 확실히 C++로만 코딩한 나보다 더 효율적으로 잘 짜신다. 보고 많이 배워야 될거같다! 파이썬의 모듈들을 빨리 알아 보고 정규표현도 공부해야된다. 수학은 역시나 어렵다…. 주말을 통해 다시 정리해야될거 같다&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-03&quot;&gt;Day 03&lt;/h2&gt;
&lt;h3 id=&quot;강의-복습-내용-2&quot;&gt;강의 복습 내용&lt;/h3&gt;
&lt;h5 id=&quot;python3-1-1&quot;&gt;[Python3-1]&lt;/h5&gt;
&lt;h6 id=&quot;자료-구조-1&quot;&gt;자료 구조&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;스택 (Stack)
    &lt;ul&gt;
      &lt;li&gt;리스트를 사용하여 스택 구현 가능&lt;/li&gt;
      &lt;li&gt;append(), pop()&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;큐 (Queue)
    &lt;ul&gt;
      &lt;li&gt;리스트를 사용하여 큐 구현 가능&lt;/li&gt;
      &lt;li&gt;append(), pop(0)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;튜플 (Tuple)
    &lt;ul&gt;
      &lt;li&gt;값의 변경이 불가능한 리스트&lt;/li&gt;
      &lt;li&gt;선언 시 ‘()’를 사용&lt;/li&gt;
      &lt;li&gt;리스트의 특징과 동일하다 –&amp;gt; 왜 쓸까??
  프로그램을 작동하는 동안 변경되지 않은 데이터를 저장하기 위해!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;집합 (Set)
    &lt;ul&gt;
      &lt;li&gt;값을 순서없이 저장, 중복 불허 하는 자료형&lt;/li&gt;
      &lt;li&gt;
        &lt;hr /&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사전 (Dictionary)
    &lt;ul&gt;
      &lt;li&gt;Key와 Value를 매칭하여 key로 value 검색&lt;/li&gt;
      &lt;li&gt;.items()&lt;/li&gt;
      &lt;li&gt;.keys()&lt;/li&gt;
      &lt;li&gt;.values()&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Counter
    &lt;ul&gt;
      &lt;li&gt;Sequence type의 data element들의 개수를 dict 형태로 반환&lt;/li&gt;
      &lt;li&gt;
        &lt;hr /&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;python-3-2-1&quot;&gt;[Python 3-2]&lt;/h5&gt;
&lt;h6 id=&quot;pythonic-code-1&quot;&gt;Pythonic Code&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;파이썬의 특유의 문법을 활용해 효율적으로 코드를 표현&lt;/li&gt;
  &lt;li&gt;split
    &lt;ul&gt;
      &lt;li&gt;string 값을 기준으로 나눠서 List 형태로 변환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;join
    &lt;ul&gt;
      &lt;li&gt;string으로 구성된 List를 합쳐 하나의 string으로 반환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;list comprehension
    &lt;ul&gt;
      &lt;li&gt;기존 list를 사용해 다른 list를 만드는 기법&lt;/li&gt;
      &lt;li&gt;for + append 보다 빠름&lt;/li&gt;
      &lt;li&gt;
        &lt;hr /&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;enumerate
    &lt;ul&gt;
      &lt;li&gt;list의 element를 추출할 때 번호를 붙여서 추출&lt;/li&gt;
      &lt;li&gt;
        &lt;hr /&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;zip
    &lt;ul&gt;
      &lt;li&gt;두 개의 list의 값을 병렬적으로 추출함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;가변인자 (variable-length)
    &lt;ul&gt;
      &lt;li&gt;개수가 정해지지 않은 변수를 함수의 파라미터로 사용하는 법&lt;/li&gt;
      &lt;li&gt;* 기호를 사용하여 표시&lt;/li&gt;
      &lt;li&gt;
        &lt;hr /&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;키워드 가변인자 (Keyword variable-length)
    &lt;ul&gt;
      &lt;li&gt;파라미터 이름을 따로 지정하지 않고 입력&lt;/li&gt;
      &lt;li&gt;**기호를 사용하여 표시&lt;/li&gt;
      &lt;li&gt;
        &lt;hr /&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;python-4-1-1&quot;&gt;[Python 4-1]&lt;/h5&gt;
&lt;h6 id=&quot;클래스와-객체-1&quot;&gt;클래스와 객체&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;속성(변수)과 행동(함수)을 갖는다&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;예시 사진&lt;/li&gt;
  &lt;li&gt;__init__ : 객체 초기화 예약 함수&lt;/li&gt;
  &lt;li&gt;__는 특수한 예약 함수나 변수로 사용&lt;/li&gt;
  &lt;li&gt;Class 함수로 self를 반드시 추가해야된다&lt;/li&gt;
  &lt;li&gt;상속 (Inheritance)
    &lt;ul&gt;
      &lt;li&gt;부모클래스로부터 속성과 Method를 물려받은 자식 클래스를 생성하는 것&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;다형성 (Polymorphism)
    &lt;ul&gt;
      &lt;li&gt;같은 이름 메소드의 내부 로직을 다르게 작성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;python-4-2-1&quot;&gt;[Python 4-2]&lt;/h5&gt;
&lt;h6 id=&quot;module-6&quot;&gt;Module&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;프로그램에서의 작은 프로그램 조각들, 모듈을 모아 하나의 큰 프로그램 개발&lt;/li&gt;
  &lt;li&gt;import 문을 사용해서 모듈 호출
    &lt;h6 id=&quot;package-6&quot;&gt;Package&lt;/h6&gt;
  &lt;/li&gt;
  &lt;li&gt;모둘을 모아 놓은 단위, 하나의 프로그램&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;ai-math-6&quot;&gt;[AI Math 6]&lt;/h5&gt;
&lt;p&gt;######&lt;/p&gt;

&lt;h5 id=&quot;ai-math-7&quot;&gt;[AI Math 7]&lt;/h5&gt;
&lt;p&gt;######&lt;/p&gt;

&lt;h5 id=&quot;ai-math-8&quot;&gt;[AI Math 8]&lt;/h5&gt;
&lt;p&gt;######&lt;/p&gt;

&lt;h5 id=&quot;ai-math-9&quot;&gt;[AI Math 9]&lt;/h5&gt;
&lt;p&gt;######&lt;/p&gt;

&lt;h3 id=&quot;피어세션-정리-및-학습-회고-2&quot;&gt;피어세션 정리 및 학습 회고&lt;/h3&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-04&quot;&gt;Day 04&lt;/h2&gt;
&lt;h3 id=&quot;강의-복습-내용-3&quot;&gt;강의 복습 내용&lt;/h3&gt;
&lt;h5 id=&quot;python5-1&quot;&gt;[Python5-1]&lt;/h5&gt;
&lt;h6 id=&quot;exception&quot;&gt;Exception&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;try ~ except 문법
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;** 사진 올리기&lt;/li&gt;
      &lt;li&gt;Built in exception 표 사진 올리기
        &lt;h6 id=&quot;file-handling&quot;&gt;File handling&lt;/h6&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;디렉토리
    &lt;ul&gt;
      &lt;li&gt;폴더 또는 디렉토리로 불림&lt;/li&gt;
      &lt;li&gt;파일과 다른 디렉토리를 포함할 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;파일
    &lt;ul&gt;
      &lt;li&gt;컴퓨터에서 정보를 저장하는 논리적인 단위&lt;/li&gt;
      &lt;li&gt;실행, 쓰기, 읽기 등 가능&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;*** 이미지 넣기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;python-5-2&quot;&gt;[Python 5-2]&lt;/h5&gt;
&lt;h6 id=&quot;python-data-handling&quot;&gt;Python Data Handling&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;CSV
    &lt;ul&gt;
      &lt;li&gt;쉼표로 구분한 텍스트 파일&lt;/li&gt;
      &lt;li&gt;엑셀 양식의 데이터를 프로그램에 상관없이 쓰기위한 데이터 형식&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정규식 (Regular expression) &lt;strong&gt;**&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;복잡한 문자열 패턴을 정의하는 문자 표현 공식&lt;/li&gt;
      &lt;li&gt;특정한 규칙을 가진 문자열의 집합 추출&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;python-6&quot;&gt;[Python 6]&lt;/h5&gt;
&lt;h6 id=&quot;numpy&quot;&gt;Numpy&lt;/h6&gt;

&lt;h5 id=&quot;ai-math-10&quot;&gt;[AI Math 10]&lt;/h5&gt;
&lt;p&gt;######&lt;/p&gt;

&lt;h3 id=&quot;피어세션-정리-및-학습-회고-3&quot;&gt;피어세션 정리 및 학습 회고&lt;/h3&gt;
&lt;p&gt;다 같이 과제에 대한 코드리뷰를 진행했다. 오늘도 역시나 파이썬의 좋은 모듈들을 볼 수 있어 좋은 기회였다. 그리고 정규표현식의 중요성을 다시 느꼈다.마스터 클래스 수업에서 임성빈 교수님의 말씀을 들을 수 있었다. 부스트코스의 많은 수강생 역시 나 처럼 수학에 대해 어려움을 겪고 있어, 교수님이 소소한 팁들을 알려 주었다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;용어의 정의(Definition)부터 외우자!
    &lt;ul&gt;
      &lt;li&gt;교과서, 위키피디아 등 구글링해서 알아보자!&lt;/li&gt;
      &lt;li&gt;AI Korea, PyTorch KR, TensorFlow KR 에 질문글 남겨라&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;용어를 외웠다면 예제를 찾아 보도록 하자!
    &lt;ul&gt;
      &lt;li&gt;언제, 어디서, 어떤 경우에 쓰인다를 알아가는 것이 중요!!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;선형대수 / 확률론 / 통계학은 꼭 알아두자!&lt;/li&gt;
  &lt;li&gt;책 추천 : &lt;a href=&quot;https://d2l.ai/&quot;&gt;Dive into Deep Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;</content><author><name>KO JAE UK</name></author><category term="boostcamp" /><summary type="html">Week 1 목차 Day 01 Day 02 Day 03 Day 04</summary></entry><entry><title type="html">Baekjoon 알고리즘 - 9663번 N-Queen c++</title><link href="https://pkpete.github.io/baekjoon-9663" rel="alternate" type="text/html" title="Baekjoon 알고리즘 - 9663번 N-Queen c++" /><published>2021-07-06T00:00:00+09:00</published><updated>2021-07-06T00:00:00+09:00</updated><id>https://pkpete.github.io/baekjoon-9663</id><content type="html" xml:base="https://pkpete.github.io/baekjoon-9663">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/9663&quot;&gt;9663번 N-Queen&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;문제-접근-법&quot;&gt;문제 접근 법&lt;/h4&gt;

&lt;p&gt;N * N 크기의 체스판에서 N개의 퀸을 체스판 위에 놓을 수 있는 경우의 수를 출력하는 문제이다.&lt;/p&gt;

&lt;p&gt;N-Queen 문제는 백트래킹 기법을 사용하는 대표적인 문제이다.&lt;/p&gt;

&lt;p&gt;이차원 배열을 사용해서 사용할 수 있지만, 1차원 배열을 사용하여 풀었다. 1차원 배열을 사용 할 수 있는 이유는 퀸을 자리에 놓을때 서로 다른 행을 놓는다고 전제하에 하기 때문에 가능하다. 다시 말해 1차원 배열의 인덱스는 행을 의미한다.&lt;/p&gt;

&lt;p&gt;promising 함수에서 현재 놓여진 퀸이 제대로 된 자리에 있는지 확인을 한다. 같은 행에 위치해서는 안되고, 대각선에 위치해서 안된다.&lt;/p&gt;

&lt;p&gt;nqueen 함수는 현재 놓여진 퀸들이 적절하다면 다음 퀸을 순서대로 위치 시켜 재귀함수를 부른다. 놓여진 퀸들이 적절하지 않으면 나를 부른 함수로 돌아가 퀸의 위치를 옮긴다.&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;math.h&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;promising&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// 배열이 같은 값을 갖으면 같은 행임!!&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// 대각선에 위치해서는 안됨&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nqueen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;promising&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;nqueen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;nqueen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>KO JAE UK</name></author><category term="algorithm" /><summary type="html">9663번 N-Queen</summary></entry><entry><title type="html">Baekjoon 알고리즘 - 1039번 교환 c++</title><link href="https://pkpete.github.io/baekjoon-1039" rel="alternate" type="text/html" title="Baekjoon 알고리즘 - 1039번 교환 c++" /><published>2021-07-06T00:00:00+09:00</published><updated>2021-07-06T00:00:00+09:00</updated><id>https://pkpete.github.io/baekjoon-1039</id><content type="html" xml:base="https://pkpete.github.io/baekjoon-1039">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1039&quot;&gt;1039 교환 문제&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;문제-접근-법&quot;&gt;문제 접근 법&lt;/h4&gt;

&lt;p&gt;정수 N을 입력 받았을 때 K번의 횟수를 사용하여 각 자리에 있는 숫자의 위치를 바꾸는 문제이다. 자리를 바꿀 때의 조건은 i &amp;lt; j 여야 한다!!&lt;/p&gt;

&lt;p&gt;문제에 대한 알고리즘은 이중 for문을 사용하여 각 자리에 있는 숫자를 바꾸고 이를 큐에 넣어 계속해서 확인한다.&lt;/p&gt;

&lt;p&gt;이렇게 단순하게 된다면 메모리 초과 문제를 맞이할 것이다. 이를 해결하기 위해 set 자료구조를 사용하여 이미 나온 숫자에 대해 큐에 넣지 않도록 하여 메모리 낭비를 막을 수 있다. 그리고 while문 1번 실행시 큐의 크기 만큼 반복해줘야 메모리 초과를 막을 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;queue&amp;gt;
#include &amp;lt;algorithm&amp;gt;
#include &amp;lt;string&amp;gt;
#include &amp;lt;set&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_pair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;qsize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// set 자료구조를 사용하여 이미 나온 숫자를 큐에 넣지 않도록 한다.&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// 이게 중요함!!!&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// 현재 단계에서의 큐 사이즈 만큼 반복문&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;qsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;front&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;front&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stoi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
					&lt;span class=&quot;c1&quot;&gt;// set를 통해 이미 나온 수의 중복을 피한다&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;n&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
						&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_pair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>KO JAE UK</name></author><category term="algorithm" /><summary type="html">1039 교환 문제</summary></entry><entry><title type="html">Baekjoon 알고리즘 - 1759번 암호 만들기 c++</title><link href="https://pkpete.github.io/baekjoon-1759" rel="alternate" type="text/html" title="Baekjoon 알고리즘 - 1759번 암호 만들기 c++" /><published>2021-07-06T00:00:00+09:00</published><updated>2021-07-06T00:00:00+09:00</updated><id>https://pkpete.github.io/baekjoon-1759</id><content type="html" xml:base="https://pkpete.github.io/baekjoon-1759">&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1759&quot;&gt;1759번 암호 만들기&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;문제-접근-법&quot;&gt;문제 접근 법&lt;/h4&gt;

&lt;p&gt;암호는 서로 다른 l개의 알파벳 소문자들로 구성되며 최소 한 개의 모음과 최소 두 개의 자음으로 구성되어 있다. 암호는 알파벳이 증가하는 순서로 배열되어있다.&lt;/p&gt;

&lt;p&gt;간단한 백트래킹 문제이다. 입력으로 받은 알파벳을 정렬을 하고 백트래킹으로 모든 경우의 암호를 만든다. 암호를 만들었을때 해당 자음과 모음의 개수를 확인하고 조건에 맞으면 answer 배열에 따로 저장한다.&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;string&amp;gt;
#include &amp;lt;algorithm&amp;gt;
#include &amp;lt;vector&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moeum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;aeiou&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;make_password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 원하는 크기의 비밀번호를 생성했으면&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt_moeum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt_jaeum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// 자음과 모음의 개수를 확인&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moeum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moeum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;cnt_moeum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;cnt_jaeum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// 자음과 모음의 조건이 맞으면 배열에 저장&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt_moeum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt_jaeum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;make_password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;make_password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>KO JAE UK</name></author><category term="algorithm" /><summary type="html">1759번 암호 만들기</summary></entry><entry><title type="html">Project</title><link href="https://pkpete.github.io/project1" rel="alternate" type="text/html" title="Project" /><published>2021-06-20T12:00:00+09:00</published><updated>2021-06-20T12:00:00+09:00</updated><id>https://pkpete.github.io/project1</id><content type="html" xml:base="https://pkpete.github.io/project1">&lt;p&gt;이 글은 Project Page&lt;/p&gt;</content><author><name>KO JAE UK</name></author><category term="myproject" /><summary type="html">이 글은 Project Page</summary></entry></feed>