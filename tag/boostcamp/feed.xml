<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://pkpete.github.io/tag/boostcamp/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://pkpete.github.io/" rel="alternate" type="text/html" />
  <updated>2021-08-09T00:10:54+09:00</updated>
  <id>https://pkpete.github.io/tag/boostcamp/feed.xml</id>

  
  
  

  
    <title type="html">D A R K   H O R S E | </title>
  

  
    <subtitle>공부, 일상</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Week 1</title>
      <link href="https://pkpete.github.io/boostcamp" rel="alternate" type="text/html" title="Week 1" />
      <published>2021-08-06T00:00:00+09:00</published>
      <updated>2021-08-06T00:00:00+09:00</updated>
      <id>https://pkpete.github.io/boostcamp</id>
      <content type="html" xml:base="https://pkpete.github.io/boostcamp">&lt;h1 id=&quot;week-1&quot;&gt;Week 1&lt;/h1&gt;
&lt;h2 id=&quot;목차&quot;&gt;목차&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#day-01&quot;&gt;Day 01&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#day-02&quot;&gt;Day 02&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#day-03&quot;&gt;Day 03&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#day-04&quot;&gt;Day 04&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#day-05&quot;&gt;Day 05&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-01&quot;&gt;Day 01&lt;/h2&gt;
&lt;h3 id=&quot;강의-복습-내용&quot;&gt;강의 복습 내용&lt;/h3&gt;
&lt;h5 id=&quot;python2-1&quot;&gt;[Python2-1]&lt;/h5&gt;
&lt;h6 id=&quot;변수&quot;&gt;변수&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;데이터을 저장하기 위한 메모리 공간&lt;/li&gt;
  &lt;li&gt;값은 메모리 주소에 할당된다
    &lt;ul&gt;
      &lt;li&gt;ex) A = 8 .. A라는 이름을 가진 메모리 주소에 8을 저장하라&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;dynamic-typing&quot;&gt;Dynamic Typing&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;다른 언어와 달리 파이썬은 코드 실행 시점에 데이터의 Type을 경정한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;list&quot;&gt;List&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;Indexing
    &lt;ul&gt;
      &lt;li&gt;List에 있는 값들은 주소를 갖는다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Slicing
    &lt;ul&gt;
      &lt;li&gt;List의 값들을 잘라서 쓰는 것
        &lt;ul&gt;
          &lt;li&gt;ex) alpha = [‘a’, ‘b’, ‘c’, ‘d’, ‘e’]&lt;/li&gt;
          &lt;li&gt;print(alpha[:]) #[‘a’, ‘b’, ‘c’, ‘d’, ‘e’]&lt;/li&gt;
          &lt;li&gt;print(alpha[-4:])    #[‘b’, ‘c’, ‘d’, ‘e’]&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;List의 연산
    &lt;ul&gt;
      &lt;li&gt;+ : 합치기&lt;/li&gt;
      &lt;li&gt;* : 반복&lt;/li&gt;
      &lt;li&gt;len() : 리스트 길이&lt;/li&gt;
      &lt;li&gt;append : 이어붙이기
        &lt;ul&gt;
          &lt;li&gt;ex) alpha.append(‘z’)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;extend : 새로운 리스트 추가
        &lt;ul&gt;
          &lt;li&gt;ex) alpha.extend([‘z’])&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;insert
        &lt;ul&gt;
          &lt;li&gt;ex) alpha.insert(0,’a’)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;remove
        &lt;ul&gt;
          &lt;li&gt;ex) alpha.remove(‘z’)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;del
        &lt;ul&gt;
          &lt;li&gt;ex) del alpha[0]&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;패킹과-언패킹&quot;&gt;패킹과 언패킹&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;패킹 : 한 변수에 여러 개의 데이터를 넣는 것&lt;/li&gt;
  &lt;li&gt;언패킹 : 한 변수의 데이터를 각각의 변수로 반환
    &lt;ul&gt;
      &lt;li&gt;ex) t = [1,2,3]&lt;/li&gt;
      &lt;li&gt;a, b, c = t&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;python-2-2&quot;&gt;[Python 2-2]&lt;/h5&gt;
&lt;h6 id=&quot;함수&quot;&gt;함수&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;어떤 일을 수행하는 코드의 덩어리
&lt;img src=&quot;https://i.imgur.com/BBBhccx.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;print-formatting&quot;&gt;print formatting&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;%string, format 함수, fstring 중 fstring이 가장 깔끔!
&lt;img src=&quot;https://i.imgur.com/jDc4ONT.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;python-2-3&quot;&gt;[Python 2-3]&lt;/h5&gt;
&lt;h6 id=&quot;조건문&quot;&gt;조건문&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;어떤 일을 수행하는 코드의 덩어리&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;반복문&quot;&gt;반복문&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;반복 시작 조건, 종료 조건, 수행 명령으로 구성&lt;/li&gt;
  &lt;li&gt;for문
    &lt;ul&gt;
      &lt;li&gt;range() 사용하기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;while문&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;python-2-4&quot;&gt;[Python 2-4]&lt;/h5&gt;
&lt;h6 id=&quot;string&quot;&gt;String&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;시퀀스 자료형으로 문자형 data를 메모리에 저장&lt;/li&gt;
  &lt;li&gt;string은 1byte 크기로 한 글자씩 메모리 공간이 할당됨
    &lt;ul&gt;
      &lt;li&gt;Indexing&lt;/li&gt;
      &lt;li&gt;Slicing&lt;/li&gt;
      &lt;li&gt;덧셈 뺄셈 연산 가능&lt;/li&gt;
      &lt;li&gt;문자열 함수 
  &lt;img src=&quot;https://i.imgur.com/NJBFOuO.png&quot; alt=&quot;&quot; /&gt;
  &lt;img src=&quot;https://i.imgur.com/ghk5kpB.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;파이썬-함수-호출-방식&quot;&gt;파이썬 함수 호출 방식&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;Call by Object Reference 객체의 주소가 함수로 전달되는 방식
    &lt;ul&gt;
      &lt;li&gt;전달된 객체를 참조하여 변경 시 호출자에 영향을 주나, 새로운 객체를 만들면 호출자에 영향을 주지 않는다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;피어세션-정리-및-학습-회고&quot;&gt;피어세션 정리 및 학습 회고&lt;/h3&gt;
&lt;p&gt;BoostCamp 첫 날 서로에 대해 알아가는 시간을 갖고 무슨 활동을 해야되는지 정했다. 매일 진행 정도를 맞추어서 강의 중 이해하기 어려웠던 부분과 과제 코드 리뷰를 하기로 했다.
다른 조원 분들과 같이 부스트 캠프를 완료하기 위해 많이 노력해야 될거 같다!&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-02&quot;&gt;Day 02&lt;/h2&gt;
&lt;h3 id=&quot;강의-복습-내용-1&quot;&gt;강의 복습 내용&lt;/h3&gt;
&lt;h5 id=&quot;python3-1&quot;&gt;[Python3-1]&lt;/h5&gt;
&lt;h6 id=&quot;자료-구조&quot;&gt;자료 구조&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;스택 (Stack)
    &lt;ul&gt;
      &lt;li&gt;리스트를 사용하여 스택 구현 가능&lt;/li&gt;
      &lt;li&gt;append(), pop()&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;큐 (Queue)
    &lt;ul&gt;
      &lt;li&gt;리스트를 사용하여 큐 구현 가능&lt;/li&gt;
      &lt;li&gt;append(), pop(0)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;튜플 (Tuple)
    &lt;ul&gt;
      &lt;li&gt;값의 변경이 불가능한 리스트&lt;/li&gt;
      &lt;li&gt;선언 시 ‘()’를 사용&lt;/li&gt;
      &lt;li&gt;리스트의 특징과 동일하다 –&amp;gt; 왜 쓸까??
  프로그램을 작동하는 동안 변경되지 않은 데이터를 저장하기 위해!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;집합 (Set)
    &lt;ul&gt;
      &lt;li&gt;값을 순서없이 저장, 중복 불허 하는 자료형&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사전 (Dictionary)
    &lt;ul&gt;
      &lt;li&gt;Key와 Value를 매칭하여 key로 value 검색&lt;/li&gt;
      &lt;li&gt;.items()&lt;/li&gt;
      &lt;li&gt;.keys()&lt;/li&gt;
      &lt;li&gt;.values()&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Counter
    &lt;ul&gt;
      &lt;li&gt;Sequence type의 data element들의 개수를 dict 형태로 반환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;python-3-2&quot;&gt;[Python 3-2]&lt;/h5&gt;
&lt;h6 id=&quot;pythonic-code&quot;&gt;Pythonic Code&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;파이썬의 특유의 문법을 활용해 효율적으로 코드를 표현&lt;/li&gt;
  &lt;li&gt;split
    &lt;ul&gt;
      &lt;li&gt;string 값을 기준으로 나눠서 List 형태로 변환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;join
    &lt;ul&gt;
      &lt;li&gt;string으로 구성된 List를 합쳐 하나의 string으로 반환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;list comprehension
    &lt;ul&gt;
      &lt;li&gt;기존 list를 사용해 다른 list를 만드는 기법&lt;/li&gt;
      &lt;li&gt;for + append 보다 빠름&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;enumerate
    &lt;ul&gt;
      &lt;li&gt;list의 element를 추출할 때 번호를 붙여서 추출&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;zip
    &lt;ul&gt;
      &lt;li&gt;두 개의 list의 값을 병렬적으로 추출함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;가변인자 (variable-length)
    &lt;ul&gt;
      &lt;li&gt;개수가 정해지지 않은 변수를 함수의 파라미터로 사용하는 법&lt;/li&gt;
      &lt;li&gt;* 기호를 사용하여 표시&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;키워드 가변인자 (Keyword variable-length)
    &lt;ul&gt;
      &lt;li&gt;파라미터 이름을 따로 지정하지 않고 입력&lt;/li&gt;
      &lt;li&gt;**기호를 사용하여 표시&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;ai-math-1&quot;&gt;[AI Math 1]&lt;/h5&gt;
&lt;h6 id=&quot;module&quot;&gt;Module&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;ai-math-2&quot;&gt;[AI Math 2]&lt;/h5&gt;
&lt;h6 id=&quot;module-1&quot;&gt;Module&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;ai-math-3&quot;&gt;[AI Math 3]&lt;/h5&gt;
&lt;h6 id=&quot;module-2&quot;&gt;Module&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;ai-math-4&quot;&gt;[AI Math 4]&lt;/h5&gt;
&lt;h6 id=&quot;module-3&quot;&gt;Module&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;ai-math-5&quot;&gt;[AI Math 5]&lt;/h5&gt;
&lt;h6 id=&quot;module-4&quot;&gt;Module&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;피어세션-정리-및-학습-회고-1&quot;&gt;피어세션 정리 및 학습 회고&lt;/h3&gt;
&lt;p&gt;과제의 코드 리뷰를 통해 다른 조원분들이 파이썬 코드를 어떻게 짜는 지 보고 배울 수 있었다. 확실히 C++로만 코딩한 나보다 더 효율적으로 잘 짜신다. 보고 많이 배워야 될거같다! 파이썬의 모듈들을 빨리 알아 보고 정규표현도 공부해야된다. 수학은 역시나 어렵다…. 주말을 통해 다시 정리해야될거 같다&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-03&quot;&gt;Day 03&lt;/h2&gt;
&lt;h3 id=&quot;강의-복습-내용-2&quot;&gt;강의 복습 내용&lt;/h3&gt;
&lt;h5 id=&quot;python-4-1&quot;&gt;[Python 4-1]&lt;/h5&gt;
&lt;h6 id=&quot;클래스와-객체&quot;&gt;클래스와 객체&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;속성(변수)과 행동(함수)을 갖는다&lt;/li&gt;
  &lt;li&gt;__init__ : 객체 초기화 예약 함수&lt;/li&gt;
  &lt;li&gt;__는 특수한 예약 함수나 변수로 사용&lt;/li&gt;
  &lt;li&gt;Class 함수로 self를 반드시 추가해야된다&lt;/li&gt;
  &lt;li&gt;상속 (Inheritance)
    &lt;ul&gt;
      &lt;li&gt;부모클래스로부터 속성과 Method를 물려받은 자식 클래스를 생성하는 것&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;다형성 (Polymorphism)
    &lt;ul&gt;
      &lt;li&gt;같은 이름 메소드의 내부 로직을 다르게 작성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;python-4-2&quot;&gt;[Python 4-2]&lt;/h5&gt;
&lt;h6 id=&quot;module-5&quot;&gt;Module&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;프로그램에서의 작은 프로그램 조각들, 모듈을 모아 하나의 큰 프로그램 개발&lt;/li&gt;
  &lt;li&gt;import 문을 사용해서 모듈 호출
    &lt;h6 id=&quot;package&quot;&gt;Package&lt;/h6&gt;
  &lt;/li&gt;
  &lt;li&gt;모둘을 모아 놓은 단위, 하나의 프로그램&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;ai-math-6&quot;&gt;[AI Math 6]&lt;/h5&gt;
&lt;p&gt;######&lt;/p&gt;

&lt;h5 id=&quot;ai-math-7&quot;&gt;[AI Math 7]&lt;/h5&gt;
&lt;p&gt;######&lt;/p&gt;

&lt;h5 id=&quot;ai-math-8&quot;&gt;[AI Math 8]&lt;/h5&gt;
&lt;p&gt;######&lt;/p&gt;

&lt;h5 id=&quot;ai-math-9&quot;&gt;[AI Math 9]&lt;/h5&gt;
&lt;p&gt;######&lt;/p&gt;

&lt;h3 id=&quot;피어세션-정리-및-학습-회고-2&quot;&gt;피어세션 정리 및 학습 회고&lt;/h3&gt;
&lt;p&gt;과제의 난이도가 살짝 올라가 당황스러웠지만, 파이썬에 익숙해지다 보니 어느 정도 감이 잡혔다. 다른 조원들의 코들을 보면서 피드백 할 수 있어 더 뜻 깊다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-04&quot;&gt;Day 04&lt;/h2&gt;
&lt;h3 id=&quot;강의-복습-내용-3&quot;&gt;강의 복습 내용&lt;/h3&gt;
&lt;h5 id=&quot;python5-1&quot;&gt;[Python5-1]&lt;/h5&gt;
&lt;h6 id=&quot;exception&quot;&gt;Exception&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;try ~ except 문법
    &lt;h6 id=&quot;file-handling&quot;&gt;File handling&lt;/h6&gt;
  &lt;/li&gt;
  &lt;li&gt;디렉토리
    &lt;ul&gt;
      &lt;li&gt;폴더 또는 디렉토리로 불림&lt;/li&gt;
      &lt;li&gt;파일과 다른 디렉토리를 포함할 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;파일
    &lt;ul&gt;
      &lt;li&gt;컴퓨터에서 정보를 저장하는 논리적인 단위&lt;/li&gt;
      &lt;li&gt;실행, 쓰기, 읽기 등 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;python-5-2&quot;&gt;[Python 5-2]&lt;/h5&gt;
&lt;h6 id=&quot;python-data-handling&quot;&gt;Python Data Handling&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;CSV
    &lt;ul&gt;
      &lt;li&gt;쉼표로 구분한 텍스트 파일&lt;/li&gt;
      &lt;li&gt;엑셀 양식의 데이터를 프로그램에 상관없이 쓰기위한 데이터 형식&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정규식 (Regular expression)
    &lt;ul&gt;
      &lt;li&gt;복잡한 문자열 패턴을 정의하는 문자 표현 공식&lt;/li&gt;
      &lt;li&gt;특정한 규칙을 가진 문자열의 집합 추출&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;python-6&quot;&gt;[Python 6]&lt;/h5&gt;
&lt;h6 id=&quot;numpy&quot;&gt;Numpy&lt;/h6&gt;

&lt;h5 id=&quot;ai-math-10&quot;&gt;[AI Math 10]&lt;/h5&gt;
&lt;p&gt;######&lt;/p&gt;

&lt;h3 id=&quot;피어세션-정리-및-학습-회고-3&quot;&gt;피어세션 정리 및 학습 회고&lt;/h3&gt;
&lt;p&gt;다 같이 과제에 대한 코드리뷰를 진행했다. 오늘도 역시나 파이썬의 좋은 모듈들을 볼 수 있어 좋은 기회였다. 그리고 정규표현식의 중요성을 다시 느꼈다.마스터 클래스 수업에서 임성빈 교수님의 말씀을 들을 수 있었다. 부스트코스의 많은 수강생 역시 나 처럼 수학에 대해 어려움을 겪고 있어, 교수님이 소소한 팁들을 알려 주었다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;용어의 정의(Definition)부터 외우자!
    &lt;ul&gt;
      &lt;li&gt;교과서, 위키피디아 등 구글링해서 알아보자!&lt;/li&gt;
      &lt;li&gt;AI Korea, PyTorch KR, TensorFlow KR 에 질문글 남겨라&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;용어를 외웠다면 예제를 찾아 보도록 하자!
    &lt;ul&gt;
      &lt;li&gt;언제, 어디서, 어떤 경우에 쓰인다를 알아가는 것이 중요!!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;선형대수 / 확률론 / 통계학은 꼭 알아두자!&lt;/li&gt;
  &lt;li&gt;책 추천 : &lt;a href=&quot;https://d2l.ai/&quot;&gt;Dive into Deep Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-05&quot;&gt;Day 05&lt;/h2&gt;

&lt;h3 id=&quot;강의-복습-내용-4&quot;&gt;강의 복습 내용&lt;/h3&gt;

&lt;h3 id=&quot;피어세션-정리-및-학습-회고-4&quot;&gt;피어세션 정리 및 학습 회고&lt;/h3&gt;</content>

      
      
      
      
      

      <author>
          <name>KO JAE UK</name>
        
        
      </author>

      

      
        <category term="boostcamp" />
      

      
        <summary type="html">Week 1 목차 Day 01 Day 02 Day 03 Day 04 Day 05</summary>
      

      
      
    </entry>
  
</feed>
